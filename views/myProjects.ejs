<% include partials/header.ejs %>
    <br>
    <h1><%= title %></h1>
    <br>
    <!-- Implementation for My Projects page -->

    <p>Welcome to <%= title %></p>
    <p>Here you will find some of my Web Development projects with their related information;</p>
    <p id="projectsImages"><b>Note: Please feel free to click on each project's image to see the application and its performance!</b></p>
    <div class="table-responsive">
        <table class="table table-bordered">
          <thead>
            <tr>
              <th>#</th>
              <th>Project Image</th>
              <th>Project Name</th>
              <th>My Role</th>
              <th>Description</th>
              <th>The Outcome</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>1</td>
              <td><a href="https://shahdkala.com/home-english/" target="_blank"><img src="/images/skkLogo.png" height="100" width="100" alt="ShahdKalaKar Logo"></a></td>
              <td><p>ShahdKalaKar company's website</p></td>
              <td><p>Web Developer</p></td>
              <td>
                <p>This is an ongoing project where I - within a team of developers - have designed, developed, managed, and maintained a multilanguage responsive and adapting website using WordPress Content Management System (CMS) technology for more than 3 years.</p>
                <p>The website includes meta tags for Search Engine Optimization (SEO) purposes, such as specifying the language, viewport settings, and indexing instructions for search engine crawlers. It also has alternate links for different language versions and RSS feeds.</p>
                <p>It offers various modules and features, including an audio player, blog, post slider, buttons, catalog, comments section, contact form, slideshow, countdown timer, image gallery, maps, grid layout, headings, icons, image boxes, lists, image display, hotspot markers, magazine-style layout, masonry grid, notifications, progress bars, portfolio, and more.<br>These modules provide a range of functionality and design options for creating different types of content and layouts.</p>
                <p>The website is a highly responsive and adaptive platform designed to provide a seamless user experience across a wide range of devices and screen sizes. Its primary purpose is to showcase and promote a product or service offered by SKK company.</p>
                <p>One of the key advantages of this website is its increased reach and accessibility. By being responsive, it enables users to access the website and its content from anywhere, using any device they prefer. This broader accessibility enhances the company's ability to connect with a larger audience, potentially increasing brand exposure and customer engagement.</p>
                <p>A significant aspect of our website is its focus on delivering an exceptional user experience. The interface was designed with user-friendly navigation, intuitive controls, and visually appealing elements to engage and captivate visitors. By optimizing the User eXperience, the website aims to keep visitors on it for longer periods, encouraging exploration and ultimately increasing the likelihood of conversions or sales.</p>
                <p>Furthermore, the website prioritizes Search Engine Optimization (SEO) by incorporating responsive design principles. This has led to increased organic traffic, exposure, and potential customer acquisition.</p>
                <p>Consistency in branding and design is another crucial aspect of my website. Regardless of the device used, users encounter a unified and cohesive brand identity, reinforcing familiarity and trust. This consistency helped the company to build a strong brand image and establishes a professional online presence for the product or service offered.</p>
              </td>
              <td>
                <p>Based on the Business Analysis Department of the company, the product we developed has had the following outcomes so far:</p>
                <ul>
                  <li><b>Increased Reach and Accessibility:</b><br>The website ensures that it can be accessed and viewed seamlessly across various devices and screen sizes. This broadens the reach of the website and allows a larger audience to access and engage with the product or services offered.</li>
                  <li><b>Enhanced User eXperience:</b><br>Our responsive website adapts its layout and design based on the user's device, providing an optimized browsing experience. This led to improved user satisfaction, longer on-site engagement, and increased chances of conversions or sales.</li>
                  <li><b>Improved Search Engine Visibility:</b><br>My responsive design has been a crucial factor in Search Engine Optimization (SEO). Search engines like Google prioritize mobile-friendly websites in their search results, so having a responsive website boosts its visibility and organic traffic.</li>
                  <li><b>Brand Consistency:</b><br>The website ensures a consistent user experience across different devices. This consistency in design, branding, and functionality helped to establish a strong brand identity and fostered trust and familiarity with the products and company itself.</li>
                  <li><b>Better Conversion Rates:</b><br>With an intuitive and user-friendly interface, our website has increased conversion rates. Visitors are more likely to take desired actions, such as making a purchase, submitting a form, or contacting the company because they can easily navigate and interact with the website.</li>
                  <li><b>Competitive Advantage:</b><br>In today's digital landscape, having a responsive website is increasingly expected by users. By providing a seamless and adaptable experience, our website owner gained a competitive edge over competitors who may not have optimized their sites for multiple devices all over the region.</li>
                </ul>
                <p>To see the outcome, please click on the image provided.</p>
              </td>
            </tr>
            <tr>
              <td>2</td>
              <td><a href="http://studentweb.cencol.ca/mmahdav3/myProjects/dom/photos.htm" target="_blank"><img src="/images/DOM.jpg" height="100" width="100" alt="DOM"></a></td>
              <td><p>Document Object Model (DOM) Photo Gallery</p></td>
              <td><p>Developer</p></td>
              <td>
                <p>This is a Webpage for Document Object Model (DOM) concept. The HTML code represents a web page that includes a photo gallery and a section for favorite pictures. The page structure consists of a header, an article section for the photo gallery, and a separate section for favorite pictures. The photo gallery section contains a left arrow, a right arrow, and a button for switching between a 3-image layout and a 5-image layout. It also includes three image figures with corresponding image elements. The favorite pictures section contains a container with placeholders for five images and five delete buttons.</p>
                <p>The HTML code is structured using semantic HTML elements, providing a clear and meaningful structure to the content. It includes appropriate metadata, such as the document title, character encoding, and viewport settings. The page references an external CSS file for styling and an external JavaScript file for the photo gallery functionality.</p>
                <p>In the JavaScript file, the code starts with the definition of global variables, including references to DOM elements and an array representing the order of the photos. It then defines functions for populating the image figures based on the order specified in the photoOrder array, advancing the images to the right or left, switching between a 3-image layout and a 5-image layout, and opening a zoomed-in view of a selected image. It includes functionality for displaying and navigating through a set of images.</p>
                <p>Additionally, the code includes event listeners for user interactions, such as clicking the left or right arrow buttons, clicking on an image to zoom in, and clicking a button to switch between layout options. The event listeners are set up using the <i>addEventListener</i> method and are compatible with all modern browsers.</p>
              </td>
              <td>
                <p>The outcome of this code is a functional photo gallery application that allows users to view and navigate through a collection of images. The application supports two layout options: a 3-image layout and a 5-image layout. Users can click on the left or right arrow buttons to navigate through the images in either direction. They can also click on an image to open a zoomed-in view in a separate window.</p>
                <p>The application provides a user-friendly interface for interacting with the photo gallery. It dynamically populates the image elements based on the photoOrder array, ensuring that the images are displayed in the correct order. The layout can be easily switched between the 3-image and 5-image options by clicking a button.</p>
                <p>The code follows a modular approach, with separate functions for different tasks, making it easier to understand, maintain, and extend the functionality in the future. Event listeners are used to handle user interactions, providing a responsive and interactive user experience.</p>
                <p>The HTML code follows best practices for structuring web content and separates the concerns of structure (HTML), presentation (CSS), and functionality (JavaScript). This separation of concerns improves maintainability, extensibility, and code readability. The code is designed to provide a user-friendly experience, with intuitive navigation and interactive features.</p>
                <p>In conclusion, the code demonstrates good software engineering practices, such as code organization, separation of concerns, modularity, and the use of event-driven programming. It provides a solid foundation for further enhancements and improvements to the photo gallery application.</p>
                <p>To see the outcome, please click on the image provided.</p>
              </td>
            </tr>
            <tr>
              <td>3</td>
              <td><a href="http://studentweb.cencol.ca/mmahdav3/myProjects/gbRegForm/gbRegForm.html"><img src="../images/3.jpg" height="100" width="100" alt="Web Form"></a></td>
              <td><p>GREEN BELT Smart Registration Web Form</p></td>
              <td><p>Developer</p></td>
              <td>
                <p>This is an Advanced Smart Registration Web Form application which only accepts specific type of information thanks to <b>RegEx</b> technologies designed for GREEN BELT Gym to be used for Member Registration.</p>
                <p>It was implemented using <b>JavaScript Vanilla</b>. The application validates user input for various fields, such as first name, last name, address, city, postal code, province, age, password, and email. Each input field is associated with an error element that displays appropriate error messages based on the validation results. Event listeners are attached to the input fields to detect changes in their values.</p>
                <p>For each input field, a specific Regular Expression pattern is used to validate the corresponding value. If the input value meets the validation criteria, the error message is hidden, and the background color of the input field is set to white. Otherwise, an error message is displayed, and the background color of the input field is changed to indicate an error.</p>
                <p>There is also a form submission function called <i>ajaxpost()</i>. This function performs a final check on all input fields to ensure that they are valid. If all fields pass validation, the form data is collected using the FormData API and sent to the server via an XMLHttpRequest object. Upon successful submission, an alert message is displayed to indicate the successful creation of a customer record.</p>
              </td>
              <td>
                <p><b>Improved User Experience:</b><br>The Smart Registration Form enhances the user experience by providing real-time validation feedback. Error messages are displayed immediately when users enter invalid data, allowing them to correct their mistakes promptly. This reduces the chances of form submission errors and provides a smoother registration process.</p>
                <p><b>Data Integrity:</b><br>The client-side form validations implemented through JavaScript help maintain data integrity by ensuring that users enter accurate and valid information. This reduces the likelihood of data inconsistencies or errors in the registration data.</p>
                <p><b>Reduced Server Load:</b><br>By performing form validations on the client side, the Smart Registration Web Form reduces the number of unnecessary server requests. Validations are done before submitting the form, preventing unnecessary server processing for invalid or incomplete data. This improves the efficiency of the registration process and reduces server load.</p>
                <p><b>Error Prevention:</b><br>The form validations implemented in JavaScript help prevent common user errors, such as entering an incorrect email format, providing a weak password, or omitting required fields. By guiding users and highlighting errors in real time, the form encourages accurate data entry, reducing the chances of form submission errors.</p>
                <p><b>Scalability and Maintainability:</b><br>The use of JavaScript for client-side form validations allows for easy scalability and maintainability. Additional validation rules or modifications can be implemented without significant changes to the server-side code. This modular approach simplifies future enhancements and maintenance of the registration form.</p>
              </td>
            </tr>
            <tr>
              <td>4</td>
              <td><a href="http://studentweb.cencol.ca/mmahdav3/myProjects/tableMaker/tableMaker.html"><img src="/images/tableMaker.jpeg" height="100" width="100" alt="tableMaker"></a></td>
              <td><p>Online Table Maker</p></td>
              <td><p>Developer</p></td>
              <td>
                <p>This is an online JavaScript Table Maker application. The page is built using HTML5, CSS3, and JavaScript ES6. It allows users to create customized HTML5 tables by specifying the desired dimensions (rows and columns) using input fields.</p>
                <p>The HTML structure begins with a '!DOCTYPE' declaration and an opening 'html' tag. The 'head' section contains metadata, including the page title, favicon (icon), keywords, and a description of the table maker application. It also includes a reference to an external CSS file for styling.</p>
                <p>The 'body' section contains the main content of the page. The content is wrapped within a 'div' element with the id="allPage" for better organization. The header section includes an image representing the table maker and a heading for the application.</p>
                <p>Following the header, there are two paragraphs instructing the user to input the desired dimensions for the table (rows and columns). The dimensions are entered using 'input' elements of type "number" with minimum and maximum values set to ensure valid inputs.</p>
                <p>Next, there is a <i>"CREATE"</i> button that triggers the execution of the <i>tableMaker()</i> JavaScript function. The function dynamically generates an HTML table based on the specified dimensions and displays it on the page. The resulting table is inserted into a 'p' element with the id="tabMaker".</p>
                <p>Finally, there is a link to start over the table creation process, which refreshes the page, allowing users to create new tables.</p>
              </td>
              <td>
                <p><b>HTML Input Elements:</b><br>The HTML input elements of type "number" allow users to input the desired dimensions (rows and columns) for the table. The input fields have appropriate attributes for validation, such as minimum and maximum values, ensuring valid inputs within the specified range.</p>
                <p><b>JavaScript Functionality:</b><br>The <i>tableMaker()</i> JavaScript function is responsible for generating the HTML table dynamically based on the specified dimensions. It utilizes the <u>Document Object Model</u> <b>(DOM)</b> to create table elements and append them to the document. This dynamic creation allows for flexible and customizable tables based on user input.</p>
                <p><b>User Experience:</b><br>The web page provides a user-friendly interface for inputting the dimensions and creating tables. The instructions and input fields guide the user through the process, and the resulting table is displayed prominently on the page. The ability to start over with a new table creation process enhances the user experience.</p>
                <p><b>CSS Styling:</b><br>The external CSS file is used to apply styles and layout rules to the HTML5 elements, enhancing the visual presentation and aesthetics of the generated table.</p>
                <p><b>Cross-Browser Compatibility:</b><br>The web page has been tested and verified to work correctly across different web browsers including Chrome, Firefox, Safari, Internet Explorer to provide a consistent and reliable experience for all users.</p>
                <p><b>Code Quality and Maintainability:</b><br>Following best practices for code organization, readability, and maintainability. Using appropriate naming conventions, modularizing the code, and considering code reuse to facilitate future updates or modifications.</p>
                <p>To see the outcome, please click on the image provided.</p>
              </td>
            </tr>
            <tr>
              <td>5</td>
              <td><a href="http://studentweb.cencol.ca/mmahdav3/myProjects/ladybugHunter/ladybugHunter.html"><img src="../images/2.jpg" height="100" width="100" alt="Ladybug"></a></td>
              <td><p>Ladybug Catcher Game</p></td>
              <td><p>Developer</p></td>
              <td>
                <p>This is my favourite Game application!<br>This is a JavaScript-based game application where I demonstrated the principles of front-end web development. I utilized the HTML5 Canvas element to create an interactive playing field where users can catch virtual ladybug. The game incorporates dynamic rendering of background images, user interaction through event handling, and a game loop for smooth animation. With its engaging gameplay and captivating visuals, Ladybug Catcher offers an enjoyable gaming experience for players of all ages.</p>
              </td>
              <td>
                <p>By implementing this game, I showed how to work with event triggers and event listeners.</p>
                <p>Ladybug Catcher is as a valuable asset for me as a software developer interested in front-end web development. By examining the code and architecture of the application, I gained insights into modular code structure, event-driven programming, and game loop optimization. The project highlights the effective use of JavaScript for game logic, rendering, and user interaction. Additionally, I explored techniques for preloading and displaying images on the canvas. Ladybug Catcher provided an opportunity for me to enhance my skills in front-end technologies and gain experience in building interactive applications.</p>
                <p>To see the outcome, please click on the image provided.</p>
              </td>
            </tr>
            <tr>
              <td>6</td>
              <td><a href="http://studentweb.cencol.ca/mmahdav3/myProjects/jQueryPhotoGallery/index.html"><img src="../images/1.jpg" height="100" width="100" alt="Photo Gallery"></a></td>
              <td><p>Ajax and JQuery Photo Gallery</p></td>
              <td><p>Developer</p></td>
              <td><p>This is one of my personal projects to showcase my skills and abilities in utilizing Asynchronous JavaScript and XML <b>(AJAX)</b> principles by using the XMLHttpRequest <b>(XHR)</b> object to communicate with my data server without a full page reload.<br>The implementation combines <b>JavaScript Vanila</b>, <b>XMLHttpRequest</b>, Promises, <b>jQuery</b>, and <b>CSS3</b> animations to create a slideshow-like image viewer with navigation buttons. It fetches a JSON file containing a list of images, loads them, and provides functionality to navigate between the images using buttons.</p></td>
              <td>
                <p>In this project, I showed how to implement a JSON file and how to access it in order to use resources such as multi-media resources. In addition, I showed how to use jQuery to make the images animated.</p>
                <p>Developing the Photo Gallery application yielded numerous outcomes for me. By working on this project, I showed my hands-on experience and skills in front-end web development, particularly in <b>JavaScript Vanila</b>, <b>HTML5</b>, <b>CSS3</b>, and <b>jQuery</b>. I utilized the XMLHttpRequest object for asynchronous data retrieval and showcased my proficiency in handling HTTP requests and working with JSON data. Through the implementation of event listeners and intelligent navigation logic, I exhibited my skills in user interaction and interface design. I also showed the use of visual effects and animations to create visually appealing and engaging experiences. The Photo Gallery application proves my deep insights into the integration of multiple technologies, building interactive applications that seamlessly combine data retrieval, user interaction, and visual presentation.</p>
                <p>To see the outcome, please click on the image provided.</p>
              </td>
            </tr>
            <tr>
              <td>7</td>
              <td><a href="http://studentweb.cencol.ca/mmahdav3/myProjects/bmr/bmrImperial.html"><img src="/images/BMR.jpg" height="100" width="100" alt="BMR"></a></td>
              <td>
                <p>NATURE FIT ATHLETIC & WELLNESS CENTRE</p>
                <p>Basal Metabolic Rate Calculator</p>
              </td>
              <td><p>Developer</p></td>
              <td>
                <p>This is a web page for an Imperial Basal Metabolic Rate (BMR) calculator for NATURE FIT Athletic and Wellness Centre. The page is implemented using HTML5 and CSS3 and includes various HTML5 form elements for inputting user data, such as gender, age, height, weight, and activity level.</p>
                <p>The HTML structure starts with a '!DOCTYPE' declaration followed by the opening 'html' tag. The 'head' section contains metadata, including the page title, icon, character encoding, keywords, and a description of the calculator. It also includes a reference to an external CSS file for styling.</p>
                <p>The 'body' section contains the main content of the page. It begins with a 'div' element with the id "allPage" that wraps the entire content. The header contains an 'h1' element with the title of the calculator. The navigation section includes a list of links to the author's home page and other versions of the BMR calculator.</p>
                <p>The main content is within a 'main' element and consists of an HTML form with several fieldsets. The form includes input fields and labels for gender, age, height, weight, and activity levels. The fieldsets help group related inputs and provide legends for better organization. At the end of the form, there are buttons for calculating the BMR, refreshing the form, and displaying thank you messages.</p>
              </td>
              <td>
                <p><b>HTML Form and Input Elements:</b><br>The HTML form structure allows users to input their information conveniently. The input elements, such as select, input type="number," and input type="radio," have appropriate attributes for validation and user guidance.</p>
                <p><b>CSS Styling:</b><br>The external CSS file is used to apply styles and layout rules to the HTML elements, enhancing the visual presentation and usability of the calculator.</p>
                <p><b>Form Validation:</b><br>The HTML5 form attributes, such as required and min/max values, help ensure that users provide valid input data within the specified ranges. Additionally, client-side validation can be implemented using JavaScript to enhance the user experience and prevent form submission with invalid data.</p>
                <p><b>User Experience:</b><br>The layout and organization of the form elements and labels are designed to be intuitive and user-friendly, allowing users to navigate and input data easily. The <i>"Thank You"</i> messages provide feedback to the user upon form submission.</p>
                <p><b>Button Functionality:</b><br>The <i>"Calculate BMR"</i> button triggers the BMR calculation based on the provided inputs, and the <i>"Refresh"</i> button clears the form and resets it to its initial state.</p>
                <p><b>Backend Functionality:</b><br>To achieve a complete BMR calculator, server-side programming was implemented to handle the form submission, perform the necessary calculations using the provided input data, and generate the corresponding BMR results.</p>
                <p><b>Cross-Browser Compatibility:</b><br>The web page should be tested and verified to work correctly across different web browsers including Chrome, Firefox, Safari, Internet Explorer to provide a consistent and reliable experience for all users.</p>
                <p><b>Accessibility Considerations:</b><br>Adhere to web accessibility guidelines (WCAG 2.0) to ensure that the form and its elements are accessible to individuals with disabilities. This may involve using appropriate ARIA attributes, providing alternative text for images, and ensuring keyboard navigation support.</p>
                <p><b>Code Quality and Maintainability:</b><br>Following best practices for code organization, readability, and maintainability. Using appropriate naming conventions, modularizing the code, and considering code reuse to facilitate future updates or modifications.</p>
                <p>To see the outcome, please click on the image provided.</p>
              </td>
            </tr>
            <tr>
              <td>8</td>
              <td><a href="http://studentweb.cencol.ca/mmahdav3/myProjects/realEstateMZ/homepage.html"><img src="/images/sLogo.jpg" height="100" width="100" alt="M&Z GTA"></a></td>
              <td><p>M&Z GTA Real Estate</p></td>
              <td><p>Developer</p></td>
              <td>
                <p>This is a simple and interesting website.</p>
                <p>It represents a multi-page website for a real estate agent named M&Z GTA REAL ESTATE. This website consists of multiple HTML pages, including a Homepage, a page displaying Available Properties for sale, a Contact Form page equipped with RegEx Technologies, and a Site Map and Credits page. The website includes metadata and a link to a CSS file for styling.</p>
                <p>The main section of the website's Homepage contains information about the agent's mission, experience, awards, area coverage, and specializations. Additionally, there are testimonials from former customers. The Aside section of the Homepage includes a photo of the agent and office information, such as the office address, phone numbers, and email address etc.</p>
              </td>
              <td>
                <p>This multi-page website provides a user-friendly interface for visitors to learn about the real estate agent, view available properties, and contact the agent. From a software engineering perspective, the website showcases good practices in web development, including the use of appropriate <b>HTML5</b> structure, <b>CSS3</b> for styling, and the separation of concerns by using external CSS and linking to it.</p>
                <p>The website's structure allows for easy navigation between different pages, enhancing the user experience. The inclusion of metadata helps Search Engines understand the website's content and improves its discoverability. The website also incorporates responsive design techniques to ensure compatibility and optimal viewing experience across different devices.</p>
                <p>To see the outcome, please click on the image provided.</p>
              </td>
            </tr>
            <tr>
              <td>9</td>
              <td><a href="http://studentweb.cencol.ca/mmahdav3/myProjects/evaluationForm/evaluationForm.html"><img src="/images/EvaluationForm.jpg" height="100" width="100" alt="EvaluationForm"></a></td>
              <td><p>College Course & Instructor Evaluation Form (CENTENNIAL COLLEGE)</p></td>
              <td><p>Developer</p></td>
              <td>
                <p>This Web Form Application is an evaluation form designed for Centennial College's Continuing Education Course/Instructor evaluation. It allows students to provide feedback on various aspects of their courses and instructors. The form consists of multiple sections and fields where students can enter their responses.</p>
                <p>It provides instructions to the students to carefully read each statement and consider each one individually. The form is designed in a user-friendly manner with clear labels and input fields for easy comprehension and interaction.</p>
                <p>The Form starts with an HTML header element containing the Centennial College logo and the title of the evaluation form. The form element has an action attribute set to <i>"mailto:continuingeducation@centennialcollege.ca"</i>, indicating that the form data will be submitted via email to the specified email address.</p>
                <p>Throughout the form, input fields are used to capture student responses. The input elements have different types (text, checkbox, radio) and are associated with labels using the label element and the for attribute. The fieldset and legend elements are used to group related form elements together, providing structure and accessibility.</p>
                <p>To ensure data integrity and user experience, the form incorporates several techniques. Required attributes are used to make certain fields mandatory, preventing form submission if they are left blank. The tabindex attribute is set to define the order in which form elements are focused when using the keyboard. JavaScript validation can be added to enhance the client-side validation, ensuring that data entered by users meets specific criteria.</p>
                <p>Upon submitting the form, the form data is sent via email to the designated email address specified in the action attribute. This email can be processed and analyzed using server-side technologies such as PHP, Python, or other backend languages to extract and store the feedback data.</p>
              </td>
              <td>
                <p>The outcome of this Web Form is to facilitate the collection of valuable feedback from students for Centennial College's Continuing Education courses and instructors. The Form aims to achieve the following outcomes:</p>
                <p><b>Data Validation:</b><br>Ensure that the form data is validated on the client-side using JavaScript to enforce data integrity and prevent invalid submissions. Server-side validation can be implemented as an additional layer of security.</p>
                <p><b>Robust Form Handling:</b><br>Implement server-side logic to process and handle the submitted form data securely. This involves extracting the relevant form fields, sanitizing the data, and storing it in a secure and structured manner (Database).</p>
                <p><b>Security Measures:</b><br>Implement security practices to protect against common web vulnerabilities such as cross-site scripting (XSS) and cross-site request forgery (CSRF). This may include input sanitization, output encoding, and implementing CSRF tokens.</p>
                <p><b>Accessibility:</b><br>Ensure the form adheres to web accessibility guidelines (WCAG 2.0) to make it usable for individuals with disabilities. This includes providing proper labels, using appropriate semantic elements, and ensuring keyboard navigation support.</p>
                <p><b>Responsive Design:</b><br>Implement responsive CSS styles to ensure the form renders properly on different screen sizes and devices. This involves using media queries and fluid layouts to adapt the form's appearance and functionality.</p>
                <p><b>Error Handling and User Feedback:</b><br>Implement informative error messages and feedback to guide users in providing correct and complete responses. This includes displaying validation errors near the relevant form fields and providing general success messages upon successful form submission.</p>
                <p>To see the outcome, please click on the image provided.</p>
              </td>
            </tr>
            <tr>
              <td>10</td>
              <td><a href="http://studentweb.cencol.ca/mmahdav3/myProjects/lexus/lexus.html"><img src="/images/lexusLogo.jpg" height="100" width="100" alt="lexusLogo"></a></td>
              <td><p>Lexus Dealership Webpage</p></td>
              <td><p>Developer</p></td>
              <td>
                <p>This project represents a web page that showcases information about the 2022 Lexus RX350 FSport luxury SUV. The page is implemented using HTML5 and CSS3 and includes various elements such as headers, navigation links, images, paragraphs, lists, and a table to present the details.</p>
                <p>The HTML structure starts with a '!DOCTYPE' declaration followed by the opening 'html' tag. The 'head' section contains metadata, including the page title, icon, character encoding, keywords, and a description of the vehicle. It also includes a reference to an external CSS file for styling.</p>
                <p>The 'body' section contains the main content of the page. It begins with a 'header' element containing a container div with an image banner and a centered title. The navigation links are placed within a 'nav' element. The main content is organized within a 'main' element, consisting of text paragraphs, an image, and a table displaying different models and their starting prices.</p>
                <p>At the end of the page, a 'footer' element is included with a navigation section and copyright information.</p>
              </td>
              <td>
                <p>The outcome of this Web Page, is to provide an interactive and visually appealing platform to showcase the features, pricing, and specifications of the 2022 Lexus RX350 FSport. The technical aspects and outcomes include:</p>
                <p><b>HTML Structure:</b><br>The HTML code provides a well-structured and semantically meaningful layout, ensuring accessibility, search engine optimization, and ease of maintenance.</p>
                <p><b>CSS Styling:</b><br>The external CSS file can be used to apply styles and layout rules to the HTML elements, creating an attractive and consistent visual design.</p>
                <p><b>Responsive Design:</b><br>By using CSS media queries, the web page can adapt its layout and presentation based on different device screen sizes, allowing for a responsive user experience on various devices such as desktops, tablets, and mobile phones.</p>
                <p><b>Image Optimization:</b><br>To ensure optimal loading speed and user experience, the images used in the web page should be appropriately sized, compressed, and optimized for web delivery.</p>
                <p><b>Cross-Browser Compatibility:</b><br>The Web Page may be tested and verified to work correctly across different web browsers (e.g., Chrome, Firefox, Safari, Internet Explorer) to provide a consistent experience for all users.</p>
                <p><b>Link Functionality:</b><br>Verifying that all links 'a' elements are functioning correctly, directing users to the intended destinations (e.g., external websites, PDF documents, email addresses).</p>
                <p><b>SEO Best Practices:</b><br>Ensuring that the page includes relevant metadata, such as the page title, keywords, and description, to improve search engine visibility and discoverability.</p>
                <p><b>Accessibility Considerations:</b><br>Adhering to web accessibility guidelines (WCAG 2.0) to make the Web Page usable for individuals with disabilities. This may involve providing alternative text for images, proper semantic markup, and keyboard navigation support.</p>
                <p><b>Code Quality and Maintainability:</b><br>Following best practices for code organization, readability, and maintainability. Using appropriate naming conventions, modularize the code, and considering code reuse to facilitate future updates or modifications.</p>
                <p>To see the outcome, please click on the image provided.</p>
              </td>
            </tr>
            <tr>
              <td>11</td>
              <td><a href="http://studentweb.cencol.ca/mmahdav3/myProjects/protectedAreas/protectedAreas.html"><img src="/images/protectedAreas.jpg" height="100" width="100" alt="lexusLogo"></a></td>
              <td><p>Official Websites for Protected Areas Issues</p></td>
              <td><p>Developer</p></td>
              <td>
                <p>The "Protected Areas Issues" project is a Webpage that aims to raise awareness about the challenges and importance of protected areas. The project consists of HTML files that incorporate various elements such as images, text, links, and styling using CSS3. It is designed to provide information about protected areas, their significance, and the problems associated with them.</p>
                <p>From a software engineering perspective, the project follows a client-server model, where the HTML file is served to clients' web browsers and rendered on the client-side. The HTML files include references to external resources such as images and CSS files to enhance the presentation and styling of the content. The use of semantic HTML tags and structured content promotes readability, maintainability, and accessibility.</p>
                <p>The project leverages technologies such as HTML5, CSS3, and JavaScript ES6 for interactivity such as hyperlinks and styling. The focus is on delivering static content and providing valuable information to the users.</p>
              </td>
              <td>
                <p>The outcome of the "Protected Areas Issues" project is to effectively present information about protected areas and create awareness about the challenges they face. From a software engineering perspective, the project demonstrates the following outcomes:</p>
                <p><b>Information dissemination:</b><br>The project serves as a platform to educate users about protected areas, their significance, and the issues they encounter. By presenting the information in a structured and visually appealing manner, the project aims to engage and inform users about the importance of protecting natural resources.</p>
                <p><b>User interaction:</b><br>The project includes hyperlinks that enable users to navigate to related resources, such as official websites and reports, for further exploration. This encourages user engagement and provides them with opportunities to delve deeper into the topic and contribute to conservation efforts.</p>
                <p><b>Responsive design:</b><br>The project incorporates responsive design techniques, allowing the content to adapt and display appropriately across different devices and screen sizes. This ensures a consistent and user-friendly experience for users accessing the project from various devices, including desktop computers, tablets, and mobile phones.</p>
                <p><b>Maintainability and extensibility:</b><br>The project follows best practices of structuring HTML, separating styles into CSS files, and organizing content logically. This promotes code maintainability and facilitates future updates or additions to the project's content or functionality.</p>
                <p>To see the outcome, please click on the image provided.</p>
              </td>
            </tr>
          </tbody>
        </table>
      </div>

<% include partials/footer.ejs %>